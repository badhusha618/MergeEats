nohup: ignoring input
[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m---------------------< [0;36mcom.mergeeats:api-gateway[0;1m >----------------------[m
[[1;34mINFO[m] [1mBuilding MergeEats API Gateway 1.0.0[m
[[1;34mINFO[m]   from pom.xml
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m>>> [0;32mspring-boot:3.2.0:run[m [1m(default-cli)[0;1m > [0;1mtest-compile[m @ [36mapi-gateway[0;1m >>>[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mresources:3.3.1:resources[m [1m(default-resources)[m @ [36mapi-gateway[0;1m ---[m
[[1;34mINFO[m] Copying 1 resource from src/main/resources to target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mcompiler:3.11.0:compile[m [1m(default-compile)[m @ [36mapi-gateway[0;1m ---[m
[[1;34mINFO[m] Nothing to compile - all classes are up to date
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mresources:3.3.1:testResources[m [1m(default-testResources)[m @ [36mapi-gateway[0;1m ---[m
[[1;34mINFO[m] skip non existing resourceDirectory /workspace/mergeeats/backend/api-gateway/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mcompiler:3.11.0:testCompile[m [1m(default-testCompile)[m @ [36mapi-gateway[0;1m ---[m
[[1;34mINFO[m] Nothing to compile - all classes are up to date
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m<<< [0;32mspring-boot:3.2.0:run[m [1m(default-cli)[0;1m < [0;1mtest-compile[m @ [36mapi-gateway[0;1m <<<[m
[[1;34mINFO[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mspring-boot:3.2.0:run[m [1m(default-cli)[m @ [36mapi-gateway[0;1m ---[m
[[1;34mINFO[m] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2025-07-25 14:09:28 - Starting ApiGatewayApplication using Java 21.0.7 with PID 41673 (/workspace/mergeeats/backend/api-gateway/target/classes started by ubuntu in /workspace/mergeeats/backend/api-gateway)
2025-07-25 14:09:28 - No active profile set, falling back to 1 default profile: "default"
2025-07-25 14:09:29 - BeanFactory id=10a28fe0-af9f-3336-a045-22bdc058304a
2025-07-25 14:09:29 - Routes supplied from Gateway Properties: [RouteDefinition{id='user-service', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/api/users/**}}], filters=[FilterDefinition{name='StripPrefix', args={_genkey_0=0}}], uri=http://localhost:8081, order=0, metadata={}}, RouteDefinition{id='order-service', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/api/orders/**}}], filters=[FilterDefinition{name='StripPrefix', args={_genkey_0=0}}], uri=http://localhost:8082, order=0, metadata={}}, RouteDefinition{id='restaurant-service', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/api/restaurants/**}}], filters=[FilterDefinition{name='StripPrefix', args={_genkey_0=0}}], uri=http://localhost:8083, order=0, metadata={}}, RouteDefinition{id='delivery-service', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/api/delivery/**}}], filters=[FilterDefinition{name='StripPrefix', args={_genkey_0=0}}], uri=http://localhost:8084, order=0, metadata={}}, RouteDefinition{id='payment-service', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/api/payments/**}}], filters=[FilterDefinition{name='StripPrefix', args={_genkey_0=0}}], uri=http://localhost:8085, order=0, metadata={}}, RouteDefinition{id='notification-service', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/api/notifications/**}}], filters=[FilterDefinition{name='StripPrefix', args={_genkey_0=0}}], uri=http://localhost:8086, order=0, metadata={}}]
2025-07-25 14:09:29 - Loaded RoutePredicateFactory [After]
2025-07-25 14:09:29 - Loaded RoutePredicateFactory [Before]
2025-07-25 14:09:29 - Loaded RoutePredicateFactory [Between]
2025-07-25 14:09:29 - Loaded RoutePredicateFactory [Cookie]
2025-07-25 14:09:29 - Loaded RoutePredicateFactory [Header]
2025-07-25 14:09:29 - Loaded RoutePredicateFactory [Host]
2025-07-25 14:09:29 - Loaded RoutePredicateFactory [Method]
2025-07-25 14:09:29 - Loaded RoutePredicateFactory [Path]
2025-07-25 14:09:29 - Loaded RoutePredicateFactory [Query]
2025-07-25 14:09:29 - Loaded RoutePredicateFactory [ReadBody]
2025-07-25 14:09:29 - Loaded RoutePredicateFactory [RemoteAddr]
2025-07-25 14:09:29 - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-07-25 14:09:29 - Loaded RoutePredicateFactory [Weight]
2025-07-25 14:09:29 - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-07-25 14:09:29 - 4 mappings in 'requestMappingHandlerMapping'
2025-07-25 14:09:29 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-25 14:09:29 - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-07-25 14:09:29 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 @ExceptionHandler
2025-07-25 14:09:29 - Netty started on port 8080
2025-07-25 14:09:30 - RouteDefinition user-service applying {_genkey_0=/api/users/**} to Path
2025-07-25 14:09:30 - RouteDefinition user-service applying filter {_genkey_0=0} to StripPrefix
2025-07-25 14:09:30 - RouteDefinition matched: user-service
2025-07-25 14:09:30 - RouteDefinition order-service applying {_genkey_0=/api/orders/**} to Path
2025-07-25 14:09:30 - RouteDefinition order-service applying filter {_genkey_0=0} to StripPrefix
2025-07-25 14:09:30 - RouteDefinition matched: order-service
2025-07-25 14:09:30 - RouteDefinition restaurant-service applying {_genkey_0=/api/restaurants/**} to Path
2025-07-25 14:09:30 - RouteDefinition restaurant-service applying filter {_genkey_0=0} to StripPrefix
2025-07-25 14:09:30 - RouteDefinition matched: restaurant-service
2025-07-25 14:09:30 - RouteDefinition delivery-service applying {_genkey_0=/api/delivery/**} to Path
2025-07-25 14:09:30 - RouteDefinition delivery-service applying filter {_genkey_0=0} to StripPrefix
2025-07-25 14:09:30 - RouteDefinition matched: delivery-service
2025-07-25 14:09:30 - RouteDefinition payment-service applying {_genkey_0=/api/payments/**} to Path
2025-07-25 14:09:30 - RouteDefinition payment-service applying filter {_genkey_0=0} to StripPrefix
2025-07-25 14:09:30 - RouteDefinition matched: payment-service
2025-07-25 14:09:30 - RouteDefinition notification-service applying {_genkey_0=/api/notifications/**} to Path
2025-07-25 14:09:30 - RouteDefinition notification-service applying filter {_genkey_0=0} to StripPrefix
2025-07-25 14:09:30 - RouteDefinition matched: notification-service
2025-07-25 14:09:30 - New routes count: 6
2025-07-25 14:09:30 - Started ApiGatewayApplication in 1.836 seconds (process running for 2.048)
2025-07-25 14:12:28 - [0af2ceea-1] Using 'application/vnd.spring-boot.actuator.v3+json' given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-25 14:12:28 - [0af2ceea-1] 0..1 [org.springframework.boot.actuate.health.SystemHealth]
2025-07-25 14:13:22 - Route matched: user-service
2025-07-25 14:13:22 - Mapping [Exchange: POST http://localhost:8080/api/users/register] to Route{id='user-service', uri=http://localhost:8081, order=0, predicate=Paths: [/api/users/**], match trailing slash: true, gatewayFilters=[[[StripPrefix parts = 0], order = 1]], metadata={}}
2025-07-25 14:13:22 - [643a473f-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@63aa4e6c
2025-07-25 14:13:22 - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@195580ba}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5707f613}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@11d4d979}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a140ce5}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@db99785}, order = 0], [[StripPrefix parts = 0], order = 1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@3c25cfe1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@70716259}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1f71194d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@93501be}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@1d3c112a}, order = 2147483647]]
2025-07-25 14:13:22 - Will instrument the HTTP request headers [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Content-Type:"application/json", Content-Length:"371", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:39206"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 14:13:22 - Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4c750af1', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.40649E-4, duration(nanos)=640649.0, startTimeNanos=131358061763693}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='POST', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6f55e2ff', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.030359224, duration(nanos)=3.0359224E7, startTimeNanos=131358032187976}'], parentObservation=null}} created for the request. New headers are [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Content-Type:"application/json", Content-Length:"371", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:39206"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 14:13:22 - Will instrument the response
2025-07-25 14:13:22 - The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4c750af1', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.100057371, duration(nanos)=1.00057371E8, startTimeNanos=131358061763693}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='POST', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6f55e2ff', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.129703187, duration(nanos)=1.29703187E8, startTimeNanos=131358032187976}'], parentObservation=null}}
2025-07-25 14:13:29 - Route matched: user-service
2025-07-25 14:13:29 - Mapping [Exchange: POST http://localhost:8080/api/users/register] to Route{id='user-service', uri=http://localhost:8081, order=0, predicate=Paths: [/api/users/**], match trailing slash: true, gatewayFilters=[[[StripPrefix parts = 0], order = 1]], metadata={}}
2025-07-25 14:13:29 - [43fc5d66-3] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@63aa4e6c
2025-07-25 14:13:29 - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@195580ba}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5707f613}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@11d4d979}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a140ce5}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@db99785}, order = 0], [[StripPrefix parts = 0], order = 1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@3c25cfe1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@70716259}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1f71194d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@93501be}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@1d3c112a}, order = 2147483647]]
2025-07-25 14:13:29 - Will instrument the HTTP request headers [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Content-Type:"application/json", Content-Length:"371", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:33342"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 14:13:29 - Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@72b8a5f9', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.1846E-5, duration(nanos)=91846.0, startTimeNanos=131364591217859}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='POST', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@76873f76', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.001999177, duration(nanos)=1999177.0, startTimeNanos=131364589394717}'], parentObservation=null}} created for the request. New headers are [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Content-Type:"application/json", Content-Length:"371", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:33342"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 14:13:29 - Will instrument the response
2025-07-25 14:13:29 - The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@72b8a5f9', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.012319857, duration(nanos)=1.2319857E7, startTimeNanos=131364591217859}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='POST', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@76873f76', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.01421092, duration(nanos)=1.421092E7, startTimeNanos=131364589394717}'], parentObservation=null}}
2025-07-25 14:13:34 - Route matched: user-service
2025-07-25 14:13:34 - Mapping [Exchange: POST http://localhost:8080/api/users/register] to Route{id='user-service', uri=http://localhost:8081, order=0, predicate=Paths: [/api/users/**], match trailing slash: true, gatewayFilters=[[[StripPrefix parts = 0], order = 1]], metadata={}}
2025-07-25 14:13:34 - [77993099-4] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@63aa4e6c
2025-07-25 14:13:34 - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@195580ba}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5707f613}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@11d4d979}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a140ce5}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@db99785}, order = 0], [[StripPrefix parts = 0], order = 1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@3c25cfe1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@70716259}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1f71194d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@93501be}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@1d3c112a}, order = 2147483647]]
2025-07-25 14:13:34 - Will instrument the HTTP request headers [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Content-Type:"application/json", Content-Length:"137", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:33354"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 14:13:34 - Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@61083bdf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.0345E-5, duration(nanos)=80345.0, startTimeNanos=131370184902683}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='POST', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@235e6016', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.001819733, duration(nanos)=1819733.0, startTimeNanos=131370183243531}'], parentObservation=null}} created for the request. New headers are [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Content-Type:"application/json", Content-Length:"137", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:33354"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 14:13:34 - Will instrument the response
2025-07-25 14:13:34 - The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@61083bdf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.010774449, duration(nanos)=1.0774449E7, startTimeNanos=131370184902683}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='POST', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@235e6016', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.012496485, duration(nanos)=1.2496485E7, startTimeNanos=131370183243531}'], parentObservation=null}}
2025-07-25 14:23:26 - Route matched: user-service
2025-07-25 14:23:26 - Mapping [Exchange: POST http://localhost:8080/api/users/register] to Route{id='user-service', uri=http://localhost:8081, order=0, predicate=Paths: [/api/users/**], match trailing slash: true, gatewayFilters=[[[StripPrefix parts = 0], order = 1]], metadata={}}
2025-07-25 14:23:26 - [4b6fabe8-5] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@63aa4e6c
2025-07-25 14:23:26 - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@195580ba}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5707f613}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@11d4d979}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a140ce5}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@db99785}, order = 0], [[StripPrefix parts = 0], order = 1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@3c25cfe1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@70716259}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1f71194d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@93501be}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@1d3c112a}, order = 2147483647]]
2025-07-25 14:23:26 - Will instrument the HTTP request headers [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Content-Type:"application/json", Content-Length:"149", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:39832"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 14:23:26 - Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@42f4b639', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.81342E-4, duration(nanos)=181342.0, startTimeNanos=131961958800820}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='POST', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6ea55d21', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.004768128, duration(nanos)=4768128.0, startTimeNanos=131961954352604}'], parentObservation=null}} created for the request. New headers are [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Content-Type:"application/json", Content-Length:"149", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:39832"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 14:24:26 - Will instrument the response
2025-07-25 14:24:26 - The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@42f4b639', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=60.138386696, duration(nanos)=6.0138386696E10, startTimeNanos=131961958800820}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='POST', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/users/register'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6ea55d21', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=60.142927496, duration(nanos)=6.0142927496E10, startTimeNanos=131961954352604}'], parentObservation=null}}
2025-07-25 14:24:36 - [3d6b2403-6] Using 'application/vnd.spring-boot.actuator.v3+json' given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-25 14:24:36 - [3d6b2403-6] 0..1 [org.springframework.boot.actuate.health.SystemHealth]
2025-07-25 14:29:17 - [51a54fe2-7] Using 'application/vnd.spring-boot.actuator.v3+json' given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-25 14:29:17 - [51a54fe2-7] 0..1 [org.springframework.boot.actuate.health.SystemHealth]
2025-07-25 14:29:32 - [f063dc9b-8] Using 'application/vnd.spring-boot.actuator.v3+json' given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-25 14:29:32 - [f063dc9b-8] 0..1 [org.springframework.boot.actuate.health.SystemHealth]
2025-07-25 14:29:40 - [a10a2763-9] Using 'application/vnd.spring-boot.actuator.v3+json' given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-25 14:29:40 - [a10a2763-9] 0..1 [org.springframework.boot.actuate.health.SystemHealth]
2025-07-25 15:01:56 - Route matched: user-service
2025-07-25 15:01:56 - Mapping [Exchange: GET http://localhost:8080/api/users/actuator/health] to Route{id='user-service', uri=http://localhost:8081, order=0, predicate=Paths: [/api/users/**], match trailing slash: true, gatewayFilters=[[[StripPrefix parts = 0], order = 1]], metadata={}}
2025-07-25 15:01:56 - [0438b2e7-10] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@63aa4e6c
2025-07-25 15:01:56 - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@195580ba}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5707f613}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@11d4d979}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a140ce5}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@db99785}, order = 0], [[StripPrefix parts = 0], order = 1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@3c25cfe1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@70716259}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1f71194d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@93501be}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@1d3c112a}, order = 2147483647]]
2025-07-25 15:01:56 - Will instrument the HTTP request headers [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:35566"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 15:01:56 - Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/users/actuator/health'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6d5a9c57', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.92728E-4, duration(nanos)=292728.0, startTimeNanos=134272076567793}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='GET', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/users/actuator/health'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3f23d571', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.008483739, duration(nanos)=8483739.0, startTimeNanos=134272068518531}'], parentObservation=null}} created for the request. New headers are [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:35566"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 15:01:56 - Will instrument the response
2025-07-25 15:01:56 - The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/users/actuator/health'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6d5a9c57', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.074659218, duration(nanos)=7.4659218E7, startTimeNanos=134272076567793}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='GET', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/users/actuator/health'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3f23d571', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.082809134, duration(nanos)=8.2809134E7, startTimeNanos=134272068518531}'], parentObservation=null}}
2025-07-25 15:01:56 - Route matched: order-service
2025-07-25 15:01:56 - Mapping [Exchange: GET http://localhost:8080/api/orders/actuator/health] to Route{id='order-service', uri=http://localhost:8082, order=0, predicate=Paths: [/api/orders/**], match trailing slash: true, gatewayFilters=[[[StripPrefix parts = 0], order = 1]], metadata={}}
2025-07-25 15:01:56 - [ede317a5-11] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@63aa4e6c
2025-07-25 15:01:56 - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@195580ba}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5707f613}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@11d4d979}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a140ce5}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@db99785}, order = 0], [[StripPrefix parts = 0], order = 1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@3c25cfe1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@70716259}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1f71194d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@93501be}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@1d3c112a}, order = 2147483647]]
2025-07-25 15:01:56 - Will instrument the HTTP request headers [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:35576"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 15:01:56 - Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='order-service', spring.cloud.gateway.route.uri='http://localhost:8082'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/orders/actuator/health'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@40582bf9', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.0547E-5, duration(nanos)=80547.0, startTimeNanos=134272164931807}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='GET', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/orders/actuator/health'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@525bc5cf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.002702967, duration(nanos)=2702967.0, startTimeNanos=134272162384086}'], parentObservation=null}} created for the request. New headers are [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:35576"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 15:01:56 - Will instrument the response
2025-07-25 15:01:56 - The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='order-service', spring.cloud.gateway.route.uri='http://localhost:8082'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/orders/actuator/health'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@40582bf9', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.058279214, duration(nanos)=5.8279214E7, startTimeNanos=134272164931807}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='GET', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/orders/actuator/health'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@525bc5cf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.060913158, duration(nanos)=6.0913158E7, startTimeNanos=134272162384086}'], parentObservation=null}}
2025-07-25 15:01:56 - Route matched: restaurant-service
2025-07-25 15:01:56 - Mapping [Exchange: GET http://localhost:8080/api/restaurants/actuator/health] to Route{id='restaurant-service', uri=http://localhost:8083, order=0, predicate=Paths: [/api/restaurants/**], match trailing slash: true, gatewayFilters=[[[StripPrefix parts = 0], order = 1]], metadata={}}
2025-07-25 15:01:56 - [e8cc692e-12] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@63aa4e6c
2025-07-25 15:01:56 - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@195580ba}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5707f613}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@11d4d979}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a140ce5}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@db99785}, order = 0], [[StripPrefix parts = 0], order = 1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@3c25cfe1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@70716259}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1f71194d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@93501be}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@1d3c112a}, order = 2147483647]]
2025-07-25 15:01:56 - Will instrument the HTTP request headers [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:35584"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 15:01:56 - Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='restaurant-service', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/restaurants/actuator/health'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@180b5e9', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.579E-5, duration(nanos)=75790.0, startTimeNanos=134272232951855}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='GET', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/restaurants/actuator/health'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@41daf7e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.001854031, duration(nanos)=1854031.0, startTimeNanos=134272231241898}'], parentObservation=null}} created for the request. New headers are [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:35584"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 15:01:56 - An exception occurred and observation was not previously stopped, will stop it. The exception was [io.netty.channel.AbstractChannel$AnnotatedConnectException: finishConnect(..) failed: Connection refused: localhost/127.0.0.1:8083]
2025-07-25 15:01:56 - [e8cc692e-12]  500 Server Error for HTTP GET "/api/restaurants/actuator/health"
io.netty.channel.AbstractChannel$AnnotatedConnectException: finishConnect(..) failed: Connection refused: localhost/127.0.0.1:8083
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/restaurants/actuator/health" [ExceptionHandlingWebHandler]
Original Stack Trace:
Caused by: java.net.ConnectException: finishConnect(..) failed: Connection refused
	at io.netty.channel.unix.Errors.newConnectException0(Errors.java:166)
	at io.netty.channel.unix.Errors.handleConnectErrno(Errors.java:131)
	at io.netty.channel.unix.Socket.finishConnect(Socket.java:359)
	at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.doFinishConnect(AbstractEpollChannel.java:710)
	at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.finishConnect(AbstractEpollChannel.java:687)
	at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.epollOutReady(AbstractEpollChannel.java:567)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:499)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-25 15:01:56 - Route matched: delivery-service
2025-07-25 15:01:56 - Mapping [Exchange: GET http://localhost:8080/api/delivery/actuator/health] to Route{id='delivery-service', uri=http://localhost:8084, order=0, predicate=Paths: [/api/delivery/**], match trailing slash: true, gatewayFilters=[[[StripPrefix parts = 0], order = 1]], metadata={}}
2025-07-25 15:01:56 - [fbfece04-13] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@63aa4e6c
2025-07-25 15:01:56 - Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@195580ba}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5707f613}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@11d4d979}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a140ce5}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@db99785}, order = 0], [[StripPrefix parts = 0], order = 1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@3c25cfe1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@70716259}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1f71194d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@93501be}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@1d3c112a}, order = 2147483647]]
2025-07-25 15:01:56 - Will instrument the HTTP request headers [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:35596"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 15:01:56 - Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='delivery-service', spring.cloud.gateway.route.uri='http://localhost:8084'], highCardinalityKeyValues=[http.uri='http://localhost:8080/api/delivery/actuator/health'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@77997418', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.9538E-5, duration(nanos)=79538.0, startTimeNanos=134272349481712}'], parentObservation={name=http.server.requests(null), error=null, context=name='http.server.requests', contextualName='null', error='null', lowCardinalityKeyValues=[exception='none', method='GET', outcome='SUCCESS', status='200', uri='UNKNOWN'], highCardinalityKeyValues=[http.url='/api/delivery/actuator/health'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1be2d611', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.001504282, duration(nanos)=1504282.0, startTimeNanos=134272348121005}'], parentObservation=null}} created for the request. New headers are [Host:"localhost:8080", User-Agent:"curl/8.12.1", Accept:"*/*", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1%0]:35596"", X-Forwarded-For:"0:0:0:0:0:0:0:1%0", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-07-25 15:01:56 - An exception occurred and observation was not previously stopped, will stop it. The exception was [io.netty.channel.AbstractChannel$AnnotatedConnectException: finishConnect(..) failed: Connection refused: localhost/127.0.0.1:8084]
2025-07-25 15:01:56 - [fbfece04-13]  500 Server Error for HTTP GET "/api/delivery/actuator/health"
io.netty.channel.AbstractChannel$AnnotatedConnectException: finishConnect(..) failed: Connection refused: localhost/127.0.0.1:8084
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/api/delivery/actuator/health" [ExceptionHandlingWebHandler]
Original Stack Trace:
Caused by: java.net.ConnectException: finishConnect(..) failed: Connection refused
	at io.netty.channel.unix.Errors.newConnectException0(Errors.java:166)
	at io.netty.channel.unix.Errors.handleConnectErrno(Errors.java:131)
	at io.netty.channel.unix.Socket.finishConnect(Socket.java:359)
	at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.doFinishConnect(AbstractEpollChannel.java:710)
	at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.finishConnect(AbstractEpollChannel.java:687)
	at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.epollOutReady(AbstractEpollChannel.java:567)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:499)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-25 15:03:09 - [db3683ac-14] Using 'application/vnd.spring-boot.actuator.v3+json' given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-25 15:03:09 - [db3683ac-14] 0..1 [org.springframework.boot.actuate.health.SystemHealth]
2025-07-25 15:05:17 - [d176cbce-15] Using 'application/vnd.spring-boot.actuator.v3+json' given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-25 15:05:17 - [d176cbce-15] 0..1 [org.springframework.boot.actuate.health.SystemHealth]
2025-07-25 15:10:10 - [2249311b-16] Using 'application/vnd.spring-boot.actuator.v3+json' given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-25 15:10:10 - [2249311b-16] 0..1 [org.springframework.boot.actuate.health.SystemHealth]
2025-07-25 15:20:45 - [9c1e9fec-17] Using 'application/vnd.spring-boot.actuator.v3+json' given [*/*] and supported [application/vnd.spring-boot.actuator.v3+json, application/vnd.spring-boot.actuator.v2+json, application/json]
2025-07-25 15:20:45 - [9c1e9fec-17] 0..1 [org.springframework.boot.actuate.health.SystemHealth]
