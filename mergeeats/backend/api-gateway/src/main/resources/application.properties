# Server Configuration
server.port=8080

# Spring Application Configuration
spring.application.name=api-gateway

# Spring Cloud Gateway Routes Configuration
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=0

spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=http://localhost:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/orders/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=0

spring.cloud.gateway.routes[2].id=restaurant-service
spring.cloud.gateway.routes[2].uri=http://localhost:8083
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/restaurants/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=0

spring.cloud.gateway.routes[3].id=delivery-service
spring.cloud.gateway.routes[3].uri=http://localhost:8084
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/delivery/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=0

# Global CORS Configuration
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOriginPatterns=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowCredentials=true

# JWT Configuration
jwt.secret=mySecretKey123456789012345678901234567890

# Management Endpoints
management.endpoints.web.exposure.include=health,info,metrics,gateway
management.endpoint.health.show-details=always
management.endpoint.gateway.enabled=true

# Swagger Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Logging Configuration
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.web.reactive=DEBUG
